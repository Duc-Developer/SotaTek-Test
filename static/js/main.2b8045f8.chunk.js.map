{"version":3,"sources":["Components/AddOrEditTask/Style.js","Utilities/Constants.js","Utilities/Helpers.js","Components/AddOrEditTask/index.js","Features/TodoList/Create/index.js","Components/ButtonActions/index.js","Features/TodoList/ListTask/Task/index.js","Features/TodoList/ListTask/component.js","Features/TodoList/ListTask/BulkActions.js","Services/TodoList.js","Utilities/useHooks.js","Features/TodoList/ListTask/container.js","Features/TodoList/ListTask/index.js","Components/SnackBar/index.js","Features/TodoList/Style.js","Features/TodoList/component.js","Features/TodoList/container.js","Features/TodoList/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","rowStyled","display","marginBottom","fontWeight","rowActions","marginTop","spacing","background","color","PRIORITY","ALERT_TYPES","EVENTS","HELPERS","convertDateToStringFormat","date","type","toISOString","slice","toString","validateWithoutFullWhiteSpace","string","stringIsFullWhiteSpace","test","undefined","changeToEnglishLowerCase","trim","normalize","toLowerCase","replace","AddOrEditTask","searchPlaceholder","defaultValue","submitContent","handleSubmit","useState","formData","setFormData","title","errors","setErrors","handleChange","event","prev","target","name","value","classes","Grid","container","className","item","xs","TextField","variant","size","onChange","fullWidth","placeholder","error","helperText","description","rows","multiline","sm","dueDate","FormControl","Select","labelId","priority","MenuItem","Button","onClick","defaultProps","Date","Create","style","textAlign","ButtonActions","primaryBtn","secondaryBtn","handleActionPrimary","handleActionSecondary","mobileMatched","useMediaQuery","minWidth","marginRight","IconButton","border","list","paddingTop","paddingLeft","paddingRight","alignItems","flexGrow","whiteSpace","overflow","textOverflow","wrapForm","padding","TaskComponent","handleRemove","handleUpdate","handleCheckOrUnCheck","open","setOpen","checked","setChecked","Checkbox","newStatus","id","inputProps","Typography","children","LisTaskComponent","searchString","handleChangeSearch","isLoading","handleRemoveTask","handleUpdateTask","length","map","Task","borderTop","minHeight","position","width","bottom","wrapper","BulkActions","handleDone","TodoListServices","getTodoList","Promise","resolve","reject","storage","localStorage","getItem","todoList","JSON","parse","sort","x","y","dueDateX","dueDateY","getTime","sortTodoListByDate","filter","itemTitle","searchText","indexOf","setTimeout","status","data","createOrEditTask","task","match","findIndex","updateTask","todoId","ids","generate","createNewTask","setItem","stringify","deleteTaskWithId","listId","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","removeEventListener","useDispatchEvent","Event","dispatchEvent","ev","useDebounce","delay","debouncedValue","setDebouncedValue","clearTimeout","ListTaskContainer","evSuccess","dispatchEventSuccess","setList","setSearchString","setIsLoading","checkedList","setCheckedList","fetchListTask","a","response","console","log","debouncedSearchString","handleRemoveListChecked","newList","taskId","newCheckedList","alert","List","Alert","props","elevation","SnackbarAdvance","Snackbar","autoHideDuration","onClose","reason","severity","generateMessage","create","paddingBottom","borderLeft","rootMobile","createMobile","listMobile","TodoListComponent","handleCreate","md","propTypes","TodoListContainer","evRefreshTodoList","dispatchEventRefreshTodoList","TodoList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b8045f8.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    rowStyled: {\r\n        '& label': {\r\n            display: 'block',\r\n            marginBottom: '5px',\r\n            fontWeight: '600',\r\n        },\r\n    },\r\n    rowActions: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        '& .MuiButton-root': {\r\n            background: '#5cb85c',\r\n            color: '#ffffff',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","export const PRIORITY = {\r\n    LOW: 0,\r\n    NORMAL: 1,\r\n    HIGH: 2,\r\n};\r\n\r\nexport const ALERT_TYPES = {\r\n    SUCCESS: 'success',\r\n    ERROR: 'error',\r\n    INFOR: 'infor',\r\n    WARNING: 'warning',\r\n};\r\n\r\nexport const EVENTS = {\r\n    REFRESH_TODO_LIST: 'REFRESH_TODO_LIST',\r\n\r\n    SUCCESS: 'SUCCESS',\r\n};\r\n","const convertDateToStringFormat = (date, type = 'YYYY-MM-DD') => {\r\n    switch (type) {\r\n        case 'YYYY-MM-DD':\r\n            return date.toISOString().slice(0, 10);\r\n        default:\r\n            return date.toString();\r\n    }\r\n};\r\n\r\nconst validateWithoutFullWhiteSpace = (string) => {\r\n    const stringIsFullWhiteSpace = /^\\s+$/.test(string);\r\n    return string !== undefined && string !== '' && !stringIsFullWhiteSpace;\r\n};\r\n\r\nconst changeToEnglishLowerCase = (string) => {\r\n    return string\r\n        .trim()\r\n        .normalize('NFD')\r\n        .toLowerCase()\r\n        .replace(/\\s\\s+/g, ' ')\r\n        .replace(/[\\u0300-\\u036f]/g, '')\r\n        .replace(/đ/g, 'd');\r\n};\r\n\r\nconst HELPERS = {\r\n    convertDateToStringFormat,\r\n    validateWithoutFullWhiteSpace,\r\n    changeToEnglishLowerCase,\r\n};\r\n\r\nexport default HELPERS;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport useStyles from './Style';\r\nimport { PRIORITY } from '../../Utilities/Constants';\r\nimport HELPERS from '../../Utilities/Helpers';\r\n\r\nfunction AddOrEditTask({\r\n    searchPlaceholder,\r\n    defaultValue,\r\n    submitContent,\r\n    handleSubmit,\r\n}) {\r\n    const [formData, setFormData] = useState(defaultValue);\r\n    const [errors, setErrors] = useState({\r\n        title: false,\r\n    });\r\n\r\n    const handleClickSubmit = () => {\r\n        const isValidTitle = HELPERS.validateWithoutFullWhiteSpace(\r\n            formData.title\r\n        );\r\n        if (!isValidTitle) {\r\n            setErrors((prev) => ({ ...prev, title: true }));\r\n        } else {\r\n            handleSubmit(formData);\r\n            setErrors((prev) => ({ ...prev, title: false }));\r\n        }\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFormData((prev) => ({\r\n            ...prev,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container className={classes.root} spacing={2}>\r\n            <Grid className={classes.rowStyled} item xs={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                    placeholder={searchPlaceholder}\r\n                    error={errors.title}\r\n                    helperText={!errors.title ? '' : 'Title is required'}\r\n                />\r\n            </Grid>\r\n            <Grid className={classes.rowStyled} item xs={12}>\r\n                <label>Description</label>\r\n                <TextField\r\n                    name=\"description\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={formData.description}\r\n                    onChange={handleChange}\r\n                    rows={4}\r\n                    multiline\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            <Grid className={classes.rowStyled} item xs={12} sm={6}>\r\n                <label>Due Date</label>\r\n                <TextField\r\n                    size=\"small\"\r\n                    name=\"dueDate\"\r\n                    variant=\"outlined\"\r\n                    type=\"date\"\r\n                    value={formData.dueDate}\r\n                    onChange={handleChange}\r\n                    fullWidth\r\n                />\r\n            </Grid>\r\n            <Grid className={classes.rowStyled} item xs={12} sm={6}>\r\n                <FormControl variant=\"outlined\" size=\"small\" fullWidth>\r\n                    <label>Priority</label>\r\n                    <Select\r\n                        labelId=\"priority\"\r\n                        value={formData.priority}\r\n                        onChange={handleChange}\r\n                        name=\"priority\"\r\n                    >\r\n                        <MenuItem value={PRIORITY.LOW}>Low</MenuItem>\r\n                        <MenuItem value={PRIORITY.NORMAL}>Normal</MenuItem>\r\n                        <MenuItem value={PRIORITY.HIGH}>Hight</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid className={classes.rowActions} item xs={12}>\r\n                <Button\r\n                    onClick={handleClickSubmit}\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                >\r\n                    {submitContent}\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nAddOrEditTask.propTypes = {\r\n    searchPlaceholder: PropTypes.string,\r\n    submitContent: PropTypes.string,\r\n    defaultValue: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        description: PropTypes.string,\r\n        priority: PropTypes.number,\r\n        dueDate: PropTypes.string,\r\n    }),\r\n    handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nAddOrEditTask.defaultProps = {\r\n    searchPlaceholder: 'Add New task...',\r\n    submitContent: 'Add',\r\n    defaultValue: {\r\n        title: '',\r\n        description: '',\r\n        priority: PRIORITY.NORMAL,\r\n        dueDate: HELPERS.convertDateToStringFormat(new Date()),\r\n    },\r\n    handleSubmit: () => {},\r\n};\r\n\r\nexport default AddOrEditTask;\r\n","import React from 'react';\r\nimport AddOrEditTask from '../../../Components/AddOrEditTask';\r\n\r\nexport default function Create({ handleSubmit }) {\r\n    return (\r\n        <div>\r\n            <h3 style={{ textAlign: 'center' }}>New Task</h3>\r\n            <AddOrEditTask handleSubmit={handleSubmit} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nexport default function ButtonActions({\r\n    primaryBtn,\r\n    secondaryBtn,\r\n    handleActionPrimary,\r\n    handleActionSecondary,\r\n}) {\r\n    const mobileMatched = useMediaQuery('(max-width: 768px)');\r\n\r\n    return (\r\n        <div style={{ minWidth: mobileMatched ? '120px' : '155px' }}>\r\n            <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={handleActionPrimary}\r\n                style={{\r\n                    background: '#00bcd4',\r\n                    color: '#ffffff',\r\n                    marginRight: '5px',\r\n                }}\r\n            >\r\n                {primaryBtn}\r\n            </Button>\r\n\r\n            {mobileMatched ? (\r\n                <IconButton aria-label=\"delete\">\r\n                    <DeleteIcon style={{ color: '#d9534f' }} />\r\n                </IconButton>\r\n            ) : (\r\n                <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={handleActionSecondary}\r\n                    style={{ background: '#d9534f', color: '#ffffff' }}\r\n                >\r\n                    {secondaryBtn}\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nButtonActions.propTypes = {\r\n    primaryBtn: PropTypes.string,\r\n    secondaryBtn: PropTypes.string,\r\n    handleActionPrimary: PropTypes.func,\r\n    handleActionSecondary: PropTypes.func,\r\n};\r\n\r\nButtonActions.defaultProps = {\r\n    primaryBtn: 'Detail',\r\n    secondaryBtn: 'Remove',\r\n};\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddOrEditTask from '../../../../Components/AddOrEditTask';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonActions from '../../../../Components/ButtonActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '1px solid #000000',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    list: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        paddingRight: '5px',\r\n    },\r\n    wrapForm: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction TaskComponent({\r\n    item,\r\n    handleRemove,\r\n    handleUpdate,\r\n    handleCheckOrUnCheck,\r\n}) {\r\n    const [open, setOpen] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const newStatus = event.target.checked;\r\n        handleCheckOrUnCheck(item.id, newStatus);\r\n        setChecked(newStatus);\r\n    };\r\n\r\n    const handleDetail = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.list}>\r\n                <Checkbox\r\n                    checked={checked}\r\n                    onChange={handleChange}\r\n                    color=\"primary\"\r\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                />\r\n                <Typography\r\n                    className={classes.title}\r\n                    variant=\"subtitle2\"\r\n                    children={item.title}\r\n                />\r\n                <ButtonActions\r\n                    primaryBtn={!open ? 'Detail' : 'Close'}\r\n                    handleActionPrimary={handleDetail}\r\n                    handleActionSecondary={() => {\r\n                        handleRemove(item.id);\r\n                    }}\r\n                />\r\n            </div>\r\n            {open && (\r\n                <div className={classes.wrapForm}>\r\n                    <AddOrEditTask\r\n                        submitContent=\"Update\"\r\n                        defaultValue={item}\r\n                        handleSubmit={handleUpdate}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTaskComponent.propTypes = {\r\n    item: PropTypes.object,\r\n    handleRemove: PropTypes.func,\r\n    handleUpdate: PropTypes.func,\r\n    handleCheckOrUnCheck: PropTypes.func,\r\n};\r\n\r\nexport default TaskComponent;\r\n","import React from 'react';\r\n\r\nimport Task from './Task';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nfunction LisTaskComponent({\r\n    list,\r\n    searchString,\r\n    handleChangeSearch,\r\n    isLoading,\r\n    handleRemoveTask,\r\n    handleUpdateTask,\r\n    handleCheckOrUnCheck,\r\n}) {\r\n    const mobileMatched = useMediaQuery('(max-width: 768px)');\r\n    return (\r\n        <div style={{ marginBottom: '96px' }}>\r\n            <h3 style={{ textAlign: 'center' }}>Todo List</h3>\r\n            <div\r\n                style={{\r\n                    paddingLeft: mobileMatched ? '16px' : '36px',\r\n                    paddingRight: mobileMatched ? '16px' : '36px',\r\n                }}\r\n            >\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    placeholder=\"Search...\"\r\n                    style={{ marginBottom: '16px' }}\r\n                    value={searchString}\r\n                    onChange={handleChangeSearch}\r\n                />\r\n                {isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>...fetching</div>\r\n                ) : list.length > 0 ? (\r\n                    list.map((item) => (\r\n                        <Task\r\n                            key={item.id}\r\n                            item={item}\r\n                            handleRemove={handleRemoveTask}\r\n                            handleUpdate={handleUpdateTask}\r\n                            handleCheckOrUnCheck={handleCheckOrUnCheck}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    <div style={{ textAlign: 'center' }}>No Data</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nLisTaskComponent.propTypes = {};\r\n\r\nexport default LisTaskComponent;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonActions from '../../../Components/ButtonActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: '#e0e0e0',\r\n        display: 'flex',\r\n        borderTop: '1px solid #000000',\r\n        alignItems: 'center',\r\n        minHeight: '80px',\r\n        position: 'absolute',\r\n        width: '100%',\r\n        bottom: 0,\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        padding: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function BulkActions({ handleDone, handleRemove }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.wrapper}>\r\n                <Typography className={classes.title} variant=\"subtitle2\">\r\n                    Bulk Actions\r\n                </Typography>\r\n                <ButtonActions\r\n                    primaryBtn=\"Done\"\r\n                    handleActionPrimary={handleDone}\r\n                    handleActionSecondary={handleRemove}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBulkActions.propTypes = {\r\n    handleDone: PropTypes.func,\r\n    handleRemove: PropTypes.func,\r\n};\r\n","import ids from 'short-id';\r\nimport HELPERS from '../Utilities/Helpers';\r\n\r\nconst getTodoList = (searchString) => {\r\n    return new Promise((resolve, reject) => {\r\n        const storage = localStorage.getItem('todoList');\r\n        let todoList = !storage ? [] : JSON.parse(storage);\r\n        if (todoList.length > 1) {\r\n            todoList = todoList.filter((item) => {\r\n                const itemTitle = HELPERS.changeToEnglishLowerCase(item.title);\r\n                const searchText =\r\n                    HELPERS.changeToEnglishLowerCase(searchString);\r\n                return itemTitle.indexOf(searchText) !== -1;\r\n            });\r\n            todoList = sortTodoListByDate(todoList);\r\n        }\r\n        setTimeout(() => {\r\n            resolve({\r\n                status: 200,\r\n                data: {\r\n                    data: todoList,\r\n                },\r\n            });\r\n        }, 300);\r\n    });\r\n};\r\n\r\nconst createOrEditTask = (task) => {\r\n    return new Promise((resolve, reject) => {\r\n        const storage = localStorage.getItem('todoList');\r\n        let todoList = !storage ? [] : JSON.parse(storage);\r\n        if (!task.id) {\r\n            todoList = createNewTask(task, todoList);\r\n        } else {\r\n            todoList = updateTask(task, todoList);\r\n        }\r\n        localStorage.setItem('todoList', JSON.stringify(todoList));\r\n        setTimeout(() => {\r\n            resolve({\r\n                status: 200,\r\n                data: null,\r\n            });\r\n        }, 300);\r\n    });\r\n};\r\n\r\nconst deleteTaskWithId = (listId) => {\r\n    return new Promise((resolve, reject) => {\r\n        const storage = localStorage.getItem('todoList');\r\n        let todoList = JSON.parse(storage);\r\n        if (listId.length > 0) {\r\n            todoList = todoList.filter(\r\n                (item) => listId.indexOf(item.id) === -1\r\n            );\r\n        }\r\n        localStorage.setItem('todoList', JSON.stringify(todoList));\r\n        setTimeout(() => {\r\n            resolve({\r\n                status: 200,\r\n                data: null,\r\n            });\r\n        }, 300);\r\n    });\r\n};\r\n\r\nfunction sortTodoListByDate(todoList) {\r\n    return todoList.sort((x, y) => {\r\n        const dueDateX = new Date(x.dueDate);\r\n        const dueDateY = new Date(y.dueDate);\r\n        return dueDateX.getTime() - dueDateY.getTime();\r\n    });\r\n}\r\n\r\nfunction createNewTask(task, todoList) {\r\n    const todoId = ids.generate('ID');\r\n    return [\r\n        ...todoList,\r\n        {\r\n            id: todoId,\r\n            ...task,\r\n        },\r\n    ];\r\n}\r\n\r\nfunction updateTask(task, todoList) {\r\n    let match = todoList.findIndex((item) => item.id === task.id);\r\n    return [\r\n        ...todoList.slice(0, match),\r\n        { ...task },\r\n        ...todoList.slice(match + 1),\r\n    ];\r\n}\r\n\r\nconst TodoListServices = {\r\n    getTodoList,\r\n    createOrEditTask,\r\n    deleteTaskWithId,\r\n};\r\n\r\nexport default TodoListServices;\r\n","import { useRef, useEffect, useState } from 'react';\r\n\r\nexport const useEventListener = (eventName, handler, element = window) => {\r\n    const savedHandler = useRef();\r\n    useEffect(() => {\r\n        savedHandler.current = handler;\r\n    }, [handler]);\r\n    useEffect(() => {\r\n        const isSupported = element && element.addEventListener;\r\n        if (!isSupported) return;\r\n        const eventListener = (event) => savedHandler.current(event);\r\n        element.addEventListener(eventName, eventListener);\r\n        return () => {\r\n            element.removeEventListener(eventName, eventListener);\r\n        };\r\n    }, [eventName, element]);\r\n};\r\n\r\nexport const useDispatchEvent = (eventName, element = window) => {\r\n    const event = new Event(eventName);\r\n    const dispatchEvent = (ev) => element.dispatchEvent(ev);\r\n    return [event, dispatchEvent];\r\n};\r\n\r\nexport const useDebounce = (value, delay = 350) => {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value, delay]);\r\n    return debouncedValue;\r\n};\r\n\r\nconst useHooks = {\r\n    useEventListener,\r\n    useDispatchEvent,\r\n    useDebounce,\r\n};\r\n\r\nexport default useHooks;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport ListTaskComponent from './component';\r\nimport BulkActions from './BulkActions';\r\n\r\nimport TodoListServices from '../../../Services/TodoList';\r\nimport {\r\n    useEventListener,\r\n    useDispatchEvent,\r\n    useDebounce,\r\n} from '../../../Utilities/useHooks';\r\nimport { EVENTS } from '../../../Utilities/Constants';\r\n\r\nexport default function ListTaskContainer() {\r\n    const [evSuccess, dispatchEventSuccess] = useDispatchEvent(EVENTS.SUCCESS);\r\n    const [list, setList] = useState([]);\r\n    const [searchString, setSearchString] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [checkedList, setCheckedList] = useState([]);\r\n\r\n    const fetchListTask = async () => {\r\n        setIsLoading(true);\r\n        try {\r\n            const response = await TodoListServices.getTodoList(searchString);\r\n            setList(response.data.data);\r\n            setIsLoading(false);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const debouncedSearchString = useDebounce(searchString);\r\n    useEffect(() => {\r\n        fetchListTask();\r\n    }, [debouncedSearchString]);\r\n    useEventListener(EVENTS.REFRESH_TODO_LIST, fetchListTask);\r\n\r\n    const handleChangeSearch = (event) => {\r\n        setSearchString(event.target.value);\r\n    };\r\n\r\n    const handleRemoveListChecked = async () => {\r\n        try {\r\n            const response = await TodoListServices.deleteTaskWithId(\r\n                checkedList\r\n            );\r\n            if (response.status === 200) {\r\n                const newList = list.filter(\r\n                    (item) => checkedList.indexOf(item.id) === -1\r\n                );\r\n                setList(newList);\r\n                setCheckedList([]);\r\n                dispatchEventSuccess(evSuccess);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleUpdateTask = async (task) => {\r\n        try {\r\n            const response = await TodoListServices.createOrEditTask(task);\r\n            if (response.status === 200) {\r\n                const match = list.findIndex((item) => item.id === task.id);\r\n                const newList = [\r\n                    ...list.slice(0, match),\r\n                    { ...task },\r\n                    ...list.slice(match + 1),\r\n                ];\r\n                setList(newList);\r\n                dispatchEventSuccess(evSuccess);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleRemoveTask = async (taskId) => {\r\n        try {\r\n            const response = await TodoListServices.deleteTaskWithId([taskId]);\r\n            if (response.status === 200) {\r\n                const newList = list.filter((item) => item.id !== taskId);\r\n                const newCheckedList = checkedList.filter(\r\n                    (id) => id !== taskId\r\n                );\r\n                setCheckedList(newCheckedList);\r\n                setList(newList);\r\n                dispatchEventSuccess(evSuccess);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleCheckOrUnCheckTask = (taskId, status) => {\r\n        if (status) {\r\n            setCheckedList([...checkedList, taskId]);\r\n        } else {\r\n            const newCheckedList = checkedList.filter((id) => id !== taskId);\r\n            setCheckedList(newCheckedList);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <ListTaskComponent\r\n                list={list}\r\n                searchString={searchString}\r\n                isLoading={isLoading}\r\n                handleChangeSearch={handleChangeSearch}\r\n                handleRemoveTask={handleRemoveTask}\r\n                handleUpdateTask={handleUpdateTask}\r\n                handleCheckOrUnCheck={handleCheckOrUnCheckTask}\r\n            />\r\n            {checkedList.length > 0 && (\r\n                <BulkActions\r\n                    handleRemove={handleRemoveListChecked}\r\n                    handleDone={() => {\r\n                        alert('Action is Ignore!');\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ListTaskContainer from './container';\r\n\r\nexport default function List() {\r\n    return <ListTaskContainer />;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { ALERT_TYPES, EVENTS } from '../../Utilities/Constants';\r\nimport { useEventListener } from '../../Utilities/useHooks';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    alert: {\r\n        minWidth: '200px',\r\n    },\r\n}));\r\n\r\nexport default function SnackbarAdvance({ type }) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleAlert = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            setOpen(false);\r\n        }\r\n    };\r\n    useEventListener(EVENTS.SUCCESS, handleAlert);\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert className={classes.alert} severity={type}>\r\n                    {generateMessage(type)}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction generateMessage(type) {\r\n    switch (type) {\r\n        case ALERT_TYPES.SUCCESS:\r\n            return 'Successful!';\r\n        case ALERT_TYPES.ERROR:\r\n            return 'Something was wrong!';\r\n        case ALERT_TYPES.WARNING:\r\n            return 'Warning!';\r\n        default:\r\n            return 'Errors';\r\n    }\r\n}\r\n\r\nSnackbarAdvance.propTypes = {\r\n    type: PropTypes.oneOf(Object.values(ALERT_TYPES)),\r\n};\r\n\r\nSnackbarAdvance.defaultProps = {\r\n    type: 'success',\r\n};\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '1px solid #000000',\r\n    },\r\n    create: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    list: {\r\n        paddingTop: theme.spacing(2),\r\n        borderLeft: '1px solid #000000',\r\n        position: 'relative',\r\n    },\r\n\r\n    rootMobile: {\r\n        border: '1px solid #000000',\r\n    },\r\n    createMobile: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    listMobile: {\r\n        paddingTop: theme.spacing(1),\r\n        borderTop: '1px solid #000000',\r\n        position: 'relative',\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport Create from './Create';\r\nimport ListTask from './ListTask';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Snackbar from '../../Components/SnackBar';\r\n\r\nimport useStyles from './Style';\r\n\r\nfunction TodoListComponent({ handleCreate }) {\r\n    const classes = useStyles();\r\n    const mobileMatched = useMediaQuery('(max-width: 768px)');\r\n    return (\r\n        <>\r\n            <Grid\r\n                className={`${\r\n                    !mobileMatched ? classes.root : classes.rootMobile\r\n                }`}\r\n                container\r\n            >\r\n                <Grid\r\n                    className={`${\r\n                        !mobileMatched ? classes.create : classes.createMobile\r\n                    }`}\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                >\r\n                    <Create handleSubmit={handleCreate} />\r\n                </Grid>\r\n                <Grid\r\n                    className={`${\r\n                        !mobileMatched ? classes.list : classes.listMobile\r\n                    }`}\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                >\r\n                    <ListTask />\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoListComponent;\r\n","import React from 'react';\r\n\r\nimport TodoListComponent from './component';\r\nimport TodoListServices from '../../Services/TodoList';\r\nimport { EVENTS } from '../../Utilities/Constants';\r\nimport { useDispatchEvent } from '../../Utilities/useHooks';\r\n\r\nfunction TodoListContainer() {\r\n    const [evRefreshTodoList, dispatchEventRefreshTodoList] = useDispatchEvent(\r\n        EVENTS.REFRESH_TODO_LIST\r\n    );\r\n    const [evSuccess, dispatchEventSuccess] = useDispatchEvent(EVENTS.SUCCESS);\r\n    const handleCreate = (formData) => {\r\n        createNewTask(formData);\r\n    };\r\n    const createNewTask = async (task) => {\r\n        try {\r\n            const response = await TodoListServices.createOrEditTask(task);\r\n            if (response.status === 200) {\r\n                dispatchEventSuccess(evSuccess);\r\n                dispatchEventRefreshTodoList(evRefreshTodoList);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    return <TodoListComponent handleCreate={handleCreate} />;\r\n}\r\n\r\nTodoListComponent.propTypes = {};\r\n\r\nexport default TodoListContainer;\r\n","import React from 'react';\r\nimport TodoListContainer from './container';\r\n\r\nexport default function TodoList() {\r\n    return <TodoListContainer />;\r\n}\r\n","import './App.css';\r\nimport TodoList from './Features/TodoList';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <TodoList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <>\r\n        <App />\r\n    </>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}